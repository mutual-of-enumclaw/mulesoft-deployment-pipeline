# This workflow will build a MuleSoft project and deploy to CloudHub
name: Deploy MuleSoft application
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Replace connected app clientid in pom.xml
        run: sed -i "s/_CONNECTED_APP_CLIENT_ID_/${{secrets.ANYPOINT_CONNECTED_APP_ID}}/g" pom.xml

      - name: Replace connected app secret in pom.xml
        run: sed -i "s/_CONNECTED_APP_CLIENT_SECRET_/${{secrets.ANYPOINT_CONNECTED_APP_SECRET}}/g" pom.xml

      - name: Replace anypoint platform clientid in pom.xml
        run: sed -i "s/_ANYPOINT_PLATFORM_CLIENT_ID_/${{secrets.ANYPOINT_PLATFORM_CLIENT_ID}}/g" pom.xml

      - name: Replace anypoint platform secret in pom.xml
        run: sed -i "s/_ANYPOINT_PLATFORM_CLIENT_SECRET_/${{secrets.ANYPOINT_PLATFORM_CLIENT_SECRET}}/g" pom.xml


      - name: Replace connected app clientid in cicdSettings.xml
        run: sed -i "s/_CLIENTID_/${{secrets.ANYPOINT_CONNECTED_APP_ID}}/g" cicdSettings.xml

      - name: Replace connected app secret in cicdSettings.xml
        run: sed -i "s/_SECRET_/${{secrets.ANYPOINT_CONNECTED_APP_SECRET}}/g" cicdSettings.xml

      - name: Replace repo user name in cicdSettings.xml
        run: sed -i "s/_repousername_/${{secrets.MULESOFT_REPO_USERNAME}}/g" cicdSettings.xml

      - name: Replace repo password in cicdSettings.xml
        run: sed -i "s/_repopassword_/${{secrets.MULESOFT_REPO_PASSWORD}}/g" cicdSettings.xml

      - name: Deploy to Nexus
        run: mvn clean deploy -s cicdSettings.xml -gs cicdSettings.xml

      - name: Deploy to Anypoint
        run: |
          mvn clean package deploy -DmuleDeploy \
          -DskipTests -e \
          -s cicdSettings.xml \
          -gs cicdSettings.xml



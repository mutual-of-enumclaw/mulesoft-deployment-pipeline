# This workflow will build a MuleSoft project and deploy to CloudHub
name: Deploy MuleSoft application
on:
  workflow_call:
    secrets:
      ANYPOINT_CONNECTED_APP_ID:
        required: true
      ANYPOINT_CONNECTED_APP_SECRET:
        required: true
      ANYPOINT_PLATFORM_CLIENT_ID:
        required: true
      ANYPOINT_PLATFORM_CLIENT_SECRET:
        required: true
      MULESOFT_REPO_USERNAME:
        required: true
      MULESOFT_REPO_PASSWORD:
        required: true
      MULESOFT_MS_TEAMS_WEBHOOK:
        required: true

jobs:

  deploy:
    runs-on: ubuntu-latest
      
    steps:
      - name: checkout
        uses: actions/checkout@v2

#       - name: Microsoft Teams Deploy Card
#         uses: patrickpaulin/ms-teams-deploy-card@master
#         if: always()
#         with:
#           github-token: ${{ github.token }}
#           webhook-uri: ${{ secrets.MULESOFT_MS_TEAMS_WEBHOOK }}
#           card-layout-exit: complete
#           show-on-start: false
#           custom-facts: |
#             - name: Environment
#               value: Development

      - name: what is the sec 
        run: |
          echo 'ANYPOINT_CONNECTED_APP_ID ${{secrets.ANYPOINT_CONNECTED_APP_ID}}'
          echo 'ANYPOINT_CONNECTED_APP_SECRET ${{secrets.ANYPOINT_CONNECTED_APP_SECRET}}'
          echo 'ANYPOINT_PLATFORM_CLIENT_ID ${{secrets.ANYPOINT_PLATFORM_CLIENT_ID}}'
          echo 'ANYPOINT_PLATFORM_CLIENT_SECRET ${{secrets.ANYPOINT_PLATFORM_CLIENT_SECRET}}'
          echo 'MULESOFT_REPO_USERNAME ${{secrets.MULESOFT_REPO_USERNAME}}'
          echo 'MULESOFT_REPO_PASSWORD ${{secrets.MULESOFT_REPO_PASSWORD}}'                   
          echo 'MULESOFT_MS_TEAMS_WEBHOOK ${{secrets.MULESOFT_MS_TEAMS_WEBHOOK}}'
        
      - name: Get XML Before
        id: getxmlbefore
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
          xml-file: 'pom.xml'
          xpath: "//*[local-name()='project']/*[local-name()='build']/*[local-name()='plugins']/*[local-name()='plugin']/*[local-name()='configuration']/*[local-name()='cloudhub2Deployment']/*[local-name()='connectedAppClientId']"
      - run: echo ${{ steps.getxmlbefore.outputs.info }}
      
      - name: Replace connected app clientid in pom.xml
        run: sed -i "s/ANYPOINT_CONNECTED_APP_ID/${{secrets.ANYPOINT_CONNECTED_APP_ID}}/g" pom.xml

      - name: Get XML
        id: getxml
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
          xml-file: 'pom.xml'
          xpath: "//*[local-name()='project']/*[local-name()='build']/*[local-name()='plugins']/*[local-name()='plugin']/*[local-name()='configuration']/*[local-name()='cloudhub2Deployment']/*[local-name()='connectedAppClientId']"
      - run: echo ${{ steps.getxml.outputs.info }}
  
#       - name: Replace connected app secret in pom.xml
#         run: sed -i 's/_CONNECTED_APP_CLIENT_SECRET_/${{secrets.ANYPOINT_CONNECTED_APP_SECRET}}/g' pom.xml

#       - name: Replace anypoint platform clientid in pom.xml
#         run: sed -i 's/_ANYPOINT_PLATFORM_CLIENT_ID_/${{secrets.ANYPOINT_PLATFORM_CLIENT_ID}}/g' pom.xml

#       - name: Replace anypoint platform secret in pom.xml
#         run: sed -i 's/_ANYPOINT_PLATFORM_CLIENT_SECRET_/${{secrets.ANYPOINT_PLATFORM_CLIENT_SECRET}}/g' pom.xml


#       - name: Replace connected app clientid in cicdSettings.xml
#         run: sed -i 's/_CONNECTED_APP_CLIENT_ID_/${{secrets.ANYPOINT_CONNECTED_APP_ID}}/g' cicdSettings.xml

#       - name: Replace connected app secret in cicdSettings.xml
#         run: sed -i 's/_CONNECTED_APP_CLIENT_SECRET_/${{secrets.ANYPOINT_CONNECTED_APP_SECRET}}/g' cicdSettings.xml

#       - name: Replace repo user name in cicdSettings.xml
#         run: sed -i 's/_repousername_/${{secrets.MULESOFT_REPO_USERNAME}}/g' cicdSettings.xml

#       - name: Replace repo password in cicdSettings.xml
#         run: sed -i 's/_repopassword_/${{secrets.MULESOFT_REPO_PASSWORD}}/g' cicdSettings.xml

#       - name: Deploy to Nexus
#         run: mvn clean deploy -s cicdSettings.xml -gs cicdSettings.xml -U

#       - name: Deploy to Anypoint
#         run: |
#           mvn deploy -DmuleDeploy \
#           -DskipTests -e \
#           -s cicdSettings.xml \
#           -gs cicdSettings.xml



